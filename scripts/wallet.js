document.addEventListener("DOMContentLoaded", async () => {
    const addWalletButton = document.querySelector(".add-button");
    const walletInfoContainer = document.querySelector(".wallet-info");
    const noPaymentInfo = document.querySelector(".no-payment-info");
    
    // üü¢ Th√™m n√∫t h·ªßy k·∫øt n·ªëi v√≠
    const disconnectButton = document.createElement("button");
    disconnectButton.classList.add("disconnect-button");
    disconnectButton.innerText = "Disconnect Wallet";
    disconnectButton.style.display = "none"; // M·∫∑c ƒë·ªãnh ·∫©n

    // üü¢ Ki·ªÉm tra user ƒëƒÉng nh·∫≠p
    const user = JSON.parse(localStorage.getItem("user"));
    if (!user) {
        alert("Vui l√≤ng ƒëƒÉng nh·∫≠p tr∆∞·ªõc khi li√™n k·∫øt v√≠!");
        window.location.href = "login.html";
        return;
    }

    // üü¢ Ki·ªÉm tra Metamask
    if (typeof window.ethereum !== "undefined") {
        console.log("‚úÖ Metamask ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t");
    } else {
        alert("‚ùå Metamask ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t. Vui l√≤ng c√†i ƒë·∫∑t ƒë·ªÉ ti·∫øp t·ª•c!");
        return;
    }

    // üü¢ Ki·ªÉm tra tr·∫°ng th√°i v√≠ khi t·∫£i trang
    async function checkWalletStatus() {
        try {
            const token = localStorage.getItem("token");
            const response = await fetch(`http://localhost:5000/api/wallet/${user.id}`, {
                headers: { "Authorization": `Bearer ${token}` }
            });

            const data = await response.json();

            if (response.ok && data.wallet_address) {
                displayWalletInfo(data.wallet_address, data.wallet_balance);
                addWalletButton.innerText = "Wallet Connected";
                addWalletButton.disabled = true;
                disconnectButton.style.display = "block"; // Hi·ªÉn th·ªã n√∫t Disconnect
                noPaymentInfo.style.display = "none";
            } else {
                addWalletButton.innerText = "Add Wallet";
                addWalletButton.disabled = false;
                disconnectButton.style.display = "none"; // ·∫®n n·∫øu ch∆∞a c√≥ v√≠
            }
        } catch (error) {
            console.error("L·ªói ki·ªÉm tra v√≠:", error);
        }
    }

    // üü¢ K·∫øt n·ªëi v√≠ Metamask
    async function connectWallet() {
        try {
            const accounts = await ethereum.request({ method: "eth_requestAccounts" });
            const walletAddress = accounts[0];

            console.log("üîó K·∫øt n·ªëi th√†nh c√¥ng, ƒë·ªãa ch·ªâ v√≠:", walletAddress);

            const token = localStorage.getItem("token");
            const response = await fetch("http://localhost:5000/api/wallet/connect", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "Authorization": `Bearer ${token}`
                },
                body: JSON.stringify({ user_id: user.id, wallet_address: walletAddress })
            });

            const result = await response.json();

            if (response.ok) {
                alert("üîó K·∫øt n·ªëi v√≠ th√†nh c√¥ng!");
                displayWalletInfo(walletAddress, 0);
                addWalletButton.innerText = "Wallet Connected";
                addWalletButton.disabled = true;
                disconnectButton.style.display = "block"; // Hi·ªÉn th·ªã n√∫t Disconnect
                noPaymentInfo.style.display = "none";
            } else {
                alert(`‚ùå L·ªói: ${result.error}`);
            }
        } catch (error) {
            console.error("‚ùå L·ªói khi k·∫øt n·ªëi Metamask:", error);
            alert("C√≥ l·ªói x·∫£y ra khi k·∫øt n·ªëi Metamask!");
        }
    }

    // üü¢ H·ªßy k·∫øt n·ªëi v√≠
    async function disconnectWallet() {
        try {
            const token = localStorage.getItem("token");
            const response = await fetch(`http://localhost:5000/api/wallet/disconnect/${user.id}`, {
                method: "DELETE",
                headers: { "Authorization": `Bearer ${token}` }
            });

            if (response.ok) {
                alert("üîå ƒê√£ h·ªßy k·∫øt n·ªëi v√≠ th√†nh c√¥ng!");
                walletInfoContainer.innerHTML = ""; // X√≥a th√¥ng tin v√≠ kh·ªèi UI
                addWalletButton.innerText = "Add Wallet";
                addWalletButton.disabled = false;
                disconnectButton.style.display = "none"; // ·∫®n n√∫t Disconnect
                noPaymentInfo.style.display = "block"; // Hi·ªÉn th·ªã l·∫°i d√≤ng th√¥ng b√°o
            } else {
                alert("‚ùå L·ªói khi h·ªßy k·∫øt n·ªëi v√≠!");
            }
        } catch (error) {
            console.error("‚ùå L·ªói khi h·ªßy k·∫øt n·ªëi v√≠:", error);
        }
    }

    // üü¢ Hi·ªÉn th·ªã th√¥ng tin v√≠ l√™n UI
    function displayWalletInfo(walletAddress, balance) {
        walletInfoContainer.innerHTML = `
            <p><strong>Wallet Address:</strong> ${walletAddress}</p>
            <p><strong>Balance:</strong> ${balance} Tokens</p>
        `;
        walletInfoContainer.appendChild(disconnectButton); // Th√™m n√∫t h·ªßy k·∫øt n·ªëi v√†o UI
    }

    checkWalletStatus();
    addWalletButton.addEventListener("click", connectWallet);
    disconnectButton.addEventListener("click", disconnectWallet);
});
